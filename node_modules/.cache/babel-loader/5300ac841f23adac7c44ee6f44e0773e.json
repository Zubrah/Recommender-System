{"ast":null,"code":"// Modified Source: https://github.com/oieduardorabelo/use-navigator-online\nimport { useEffect, useState } from \"react\";\n\nfunction useNavigatorOnline() {\n  let [isOnline, setIsOnline] = useState(window.navigator.onLine);\n  useEffect(() => {\n    function handleOnlineStatusChange(event) {\n      setIsOnline(window.navigator.onLine);\n    }\n\n    window.addEventListener(\"online\", handleOnlineStatusChange);\n    window.addEventListener(\"offline\", handleOnlineStatusChange);\n    return () => {\n      window.removeEventListener(\"online\", handleOnlineStatusChange);\n      window.removeEventListener(\"offline\", handleOnlineStatusChange);\n    };\n  }, []);\n  return isOnline;\n}\n\nexport default useNavigatorOnline;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/hooks/NavigatorOnline.ts"],"names":["useEffect","useState","useNavigatorOnline","isOnline","setIsOnline","window","navigator","onLine","handleOnlineStatusChange","event","addEventListener","removeEventListener"],"mappings":"AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAACI,MAAM,CAACC,SAAP,CAAiBC,MAAlB,CAAtC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,aAASQ,wBAAT,CAAkCC,KAAlC,EAAgD;AAC9CL,MAAAA,WAAW,CAACC,MAAM,CAACC,SAAP,CAAiBC,MAAlB,CAAX;AACD;;AAEDF,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCF,wBAAlC;AACAH,IAAAA,MAAM,CAACK,gBAAP,CAAwB,SAAxB,EAAmCF,wBAAnC;AAEA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCH,wBAArC;AACAH,MAAAA,MAAM,CAACM,mBAAP,CAA2B,SAA3B,EAAsCH,wBAAtC;AACD,KAHD;AAID,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOL,QAAP;AACD;;AAED,eAAeD,kBAAf","sourcesContent":["// Modified Source: https://github.com/oieduardorabelo/use-navigator-online\n\nimport { useEffect, useState } from \"react\";\n\nfunction useNavigatorOnline() {\n  let [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  useEffect(() => {\n    function handleOnlineStatusChange(event: Event) {\n      setIsOnline(window.navigator.onLine);\n    }\n\n    window.addEventListener(\"online\", handleOnlineStatusChange);\n    window.addEventListener(\"offline\", handleOnlineStatusChange);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnlineStatusChange);\n      window.removeEventListener(\"offline\", handleOnlineStatusChange);\n    };\n  }, []);\n\n  return isOnline;\n}\n\nexport default useNavigatorOnline;\n"]},"metadata":{},"sourceType":"module"}