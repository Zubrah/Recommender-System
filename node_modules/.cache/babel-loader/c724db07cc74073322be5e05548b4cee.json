{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/pages/Tools/TrackTable.tsx\";\nimport React, { useState } from \"react\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport { randomString } from \"../../logic/Utils\";\nconst header_cell_style = {\n  position: \"sticky\",\n  top: 0,\n  background: \"white\",\n  borderTop: 0\n};\n\nconst TrackTable = props => {\n  const {\n    tracks,\n    open,\n    openToggle\n  } = props;\n  const [randomEventKey] = useState(randomString(16));\n  return /*#__PURE__*/React.createElement(Accordion, {\n    activeKey: open ? randomEventKey : undefined,\n    className: \"m-auto\",\n    style: {\n      maxWidth: 900\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: randomEventKey,\n    onClick: openToggle,\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, `Filtered Songs: ${tracks.length} (click to ${open ? \"collapse\" : \"expand\"})`), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: randomEventKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"p-0\",\n    style: {\n      maxHeight: 400,\n      overflowY: \"auto\",\n      borderTop: \"1px solid #dee2e6\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    striped: true,\n    size: \"sm\",\n    className: \"border-top-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: header_cell_style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: header_cell_style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: header_cell_style,\n    className: \"d-none d-md-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, \"Artist(s)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, tracks.map((track, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: track.id + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, track.name), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"d-none d-md-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, track.artists.map(a => a.name).join(\", \"))))))))));\n};\n\nexport default TrackTable;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/pages/Tools/TrackTable.tsx"],"names":["React","useState","Accordion","Card","Table","randomString","header_cell_style","position","top","background","borderTop","TrackTable","props","tracks","open","openToggle","randomEventKey","undefined","maxWidth","Header","cursor","length","maxHeight","overflowY","map","track","index","id","name","artists","a","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,iBAAvC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AASA,MAAMC,iBAAsC,GAAG;AAC7CC,EAAAA,QAAQ,EAAE,QADmC;AAE7CC,EAAAA,GAAG,EAAE,CAFwC;AAG7CC,EAAAA,UAAU,EAAE,OAHiC;AAI7CC,EAAAA,SAAS,EAAE;AAJkC,CAA/C;;AAOA,MAAMC,UAA2C,GAAIC,KAAD,IAAmB;AACrE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA+BH,KAArC;AAEA,QAAM,CAACI,cAAD,IAAmBf,QAAQ,CAACI,YAAY,CAAC,EAAD,CAAb,CAAjC;AAEA,sBACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAES,IAAI,GAAGE,cAAH,GAAoBC,SADrC;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,EAAE,EAAEf,IAAI,CAACgB,MADX;AAEE,IAAA,QAAQ,EAAEH,cAFZ;AAGE,IAAA,OAAO,EAAED,UAHX;AAIE,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,mBAAkBP,MAAM,CAACQ,MAAO,cAAaP,IAAI,GAAG,UAAH,GAAgB,QAAS,GAN9E,CADF,eASE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAEE,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAS,EAAE,GAAb;AAAkBC,MAAAA,SAAS,EAAE,MAA7B;AAAqCb,MAAAA,SAAS,EAAE;AAAhD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,OAAO,MAAvB;AAAwB,IAAA,IAAI,EAAC,IAA7B;AAAkC,IAAA,SAAS,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAEJ,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,IAAA,KAAK,EAAEA,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAI,IAAA,KAAK,EAAEA,iBAAX;AAA8B,IAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,MAAM,CAACW,GAAP,CAAW,CAACC,KAAD,EAAgCC,KAAhC,kBACV;AAAI,IAAA,GAAG,EAAED,KAAK,CAACE,EAAN,GAAWD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,GAAG,CAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACG,IAAX,CAFF,eAGE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,OAAN,CAAcL,GAAd,CAAmBM,CAAD,IAAOA,CAAC,CAACF,IAA3B,EAAiCG,IAAjC,CAAsC,IAAtC,CADH,CAHF,CADD,CADH,CAVF,CAJF,CADF,CATF,CALF,CADF;AA+CD,CApDD;;AAsDA,eAAepB,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport { randomString } from \"../../logic/Utils\";\nimport { TrackWithAudioFeatures } from \"../../models/Spotify\";\n\ninterface IProps {\n  tracks: TrackWithAudioFeatures[];\n  open: boolean;\n  openToggle: () => void;\n}\n\nconst header_cell_style: React.CSSProperties = {\n  position: \"sticky\",\n  top: 0,\n  background: \"white\",\n  borderTop: 0\n};\n\nconst TrackTable: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { tracks, open, openToggle } = props;\n\n  const [randomEventKey] = useState(randomString(16));\n\n  return (\n    <Accordion\n      activeKey={open ? randomEventKey : undefined}\n      className=\"m-auto\"\n      style={{ maxWidth: 900 }}\n    >\n      <Card>\n        <Accordion.Toggle\n          as={Card.Header}\n          eventKey={randomEventKey}\n          onClick={openToggle}\n          style={{ cursor: \"pointer\" }}\n        >\n          {`Filtered Songs: ${tracks.length} (click to ${open ? \"collapse\" : \"expand\"})`}\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey={randomEventKey}>\n          <Card.Body\n            className=\"p-0\"\n            style={{ maxHeight: 400, overflowY: \"auto\", borderTop: \"1px solid #dee2e6\" }}\n          >\n            <Table bordered striped size=\"sm\" className=\"border-top-0\">\n              <thead>\n                <tr>\n                  <th style={header_cell_style}>Position</th>\n                  <th style={header_cell_style}>Title</th>\n                  <th style={header_cell_style} className=\"d-none d-md-table-cell\">\n                    Artist(s)\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {tracks.map((track: TrackWithAudioFeatures, index: number) => (\n                  <tr key={track.id + index}>\n                    <td>{index + 1}</td>\n                    <td>{track.name}</td>\n                    <td className=\"d-none d-md-table-cell\">\n                      {track.artists.map((a) => a.name).join(\", \")}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\n\nexport default TrackTable;\n"]},"metadata":{},"sourceType":"module"}