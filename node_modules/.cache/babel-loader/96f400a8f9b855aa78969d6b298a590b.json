{"ast":null,"code":"// Convert an object to a query string\nexport function encodeData(data) {\n  return Object.keys(data).map(function (key) {\n    return [key, data[key]].map(encodeURIComponent).join(\"=\");\n  }).join(\"&\");\n} // Create a random string (src: https://stackoverflow.com/a/1349426)\n\nexport function randomString(length) {\n  let result = \"\";\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n} // Turn a list into lists of lists with each top level list holding a max of `chunk_amount` lists\n\nexport function chunkList(list, chunk_amount) {\n  let chunks = [];\n\n  for (let i = 0; i < list.length; i += chunk_amount) {\n    chunks = [...chunks, list.slice(i, i + chunk_amount)];\n  }\n\n  return chunks;\n} // Convert an array to an object using a provided key (src: https://medium.com/dailyjs/rewriting-javascript-converting-an-array-of-objects-to-an-object-ec579cafbfc7)\n\nexport function arrayToObject(array, keyField) {\n  return array.reduce((obj, item) => {\n    obj[item[keyField]] = item;\n    return obj;\n  }, {});\n}","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/logic/Utils.ts"],"names":["encodeData","data","Object","keys","map","key","encodeURIComponent","join","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","chunkList","list","chunk_amount","chunks","slice","arrayToObject","array","keyField","reduce","obj","item"],"mappings":"AAAA;AACA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAAuC;AAC5C,SAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EACJG,GADI,CACA,UAAUC,GAAV,EAAe;AAClB,WAAO,CAACA,GAAD,EAAMJ,IAAI,CAACI,GAAD,CAAV,EAAiBD,GAAjB,CAAqBE,kBAArB,EAAyCC,IAAzC,CAA8C,GAA9C,CAAP;AACD,GAHI,EAIJA,IAJI,CAIC,GAJD,CAAP;AAKD,C,CAED;;AACA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8C;AACnD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAG,gEAAjB;AACA,MAAIC,gBAAgB,GAAGD,UAAU,CAACF,MAAlC;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/BH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACD;;AACD,SAAOF,MAAP;AACD,C,CAED;;AACA,OAAO,SAASQ,SAAT,CAAsBC,IAAtB,EAAiCC,YAAjC,EAA8D;AACnE,MAAIC,MAAa,GAAG,EAApB;;AACA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,IAAI,CAACV,MAAzB,EAAiCI,CAAC,IAAIO,YAAtC,EAAoD;AAClDC,IAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,EAAYF,IAAI,CAACG,KAAL,CAAWT,CAAX,EAAcA,CAAC,GAAGO,YAAlB,CAAZ,CAAT;AACD;;AACD,SAAOC,MAAP;AACD,C,CAED;;AACA,OAAO,SAASE,aAAT,CAA0BC,KAA1B,EAAsCC,QAAtC,EAA+E;AACpF,SAAOD,KAAK,CAACE,MAAN,CAAa,CAACC,GAAD,EAAWC,IAAX,KAAyB;AAC3CD,IAAAA,GAAG,CAACC,IAAI,CAACH,QAAD,CAAL,CAAH,GAAsBG,IAAtB;AACA,WAAOD,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID","sourcesContent":["// Convert an object to a query string\nexport function encodeData(data: any): string {\n  return Object.keys(data)\n    .map(function (key) {\n      return [key, data[key]].map(encodeURIComponent).join(\"=\");\n    })\n    .join(\"&\");\n}\n\n// Create a random string (src: https://stackoverflow.com/a/1349426)\nexport function randomString(length: number): string {\n  let result = \"\";\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n// Turn a list into lists of lists with each top level list holding a max of `chunk_amount` lists\nexport function chunkList<T>(list: T[], chunk_amount: number): T[][] {\n  let chunks: T[][] = [];\n  for (let i = 0; i < list.length; i += chunk_amount) {\n    chunks = [...chunks, list.slice(i, i + chunk_amount)];\n  }\n  return chunks;\n}\n\n// Convert an array to an object using a provided key (src: https://medium.com/dailyjs/rewriting-javascript-converting-an-array-of-objects-to-an-object-ec579cafbfc7)\nexport function arrayToObject<T>(array: T[], keyField: keyof T): { [key: string]: T } {\n  return array.reduce((obj: any, item: any) => {\n    obj[item[keyField]] = item;\n    return obj;\n  }, {});\n}\n"]},"metadata":{},"sourceType":"module"}