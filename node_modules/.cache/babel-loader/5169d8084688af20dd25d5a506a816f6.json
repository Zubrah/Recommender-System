{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/SpotifyLoginStatusButton.tsx\";\nimport React from \"react\";\nimport { navigate, usePath } from \"hookrouter\";\nimport { Button } from \"react-bootstrap\";\nimport { localStorageRedirectKey } from \"../pages/SpotifyAuthorization\";\nimport SpotifyLogoRound from \"../img/spotify-logo-round.png\";\n\nconst SpotifyLoginStatusButton = props => {\n  const {\n    user,\n    onLoggedInClick\n  } = props;\n  const path = usePath();\n\n  const loggedInStatusButtonClick = () => {\n    if (user === undefined) {\n      localStorage.setItem(localStorageRedirectKey, path);\n      navigate(\"/spotify-authorization\");\n    } else {\n      if (onLoggedInClick) {\n        onLoggedInClick();\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: loggedInStatusButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user !== undefined && user.images !== undefined && user.images.length > 0 ? user.images[0].url : SpotifyLogoRound,\n    alt: user !== undefined && user.images !== undefined && user.images.length > 0 ? user.display_name + \" Logo\" : \"Spotify Logo Round\",\n    style: {\n      height: 20,\n      width: 20\n    },\n    className: \"mr-2 rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), user !== undefined ? user.display_name : \"Sign In With Spotify\");\n};\n\nexport default SpotifyLoginStatusButton;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/SpotifyLoginStatusButton.tsx"],"names":["React","navigate","usePath","Button","localStorageRedirectKey","SpotifyLogoRound","SpotifyLoginStatusButton","props","user","onLoggedInClick","path","loggedInStatusButtonClick","undefined","localStorage","setItem","images","length","url","display_name","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,YAAlC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,uBAAT,QAAwC,+BAAxC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAOA,MAAMC,wBAAyD,GAAIC,KAAD,IAAmB;AACnF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA4BF,KAAlC;AAEA,QAAMG,IAAI,GAAGR,OAAO,EAApB;;AAEA,QAAMS,yBAAyB,GAAG,MAAM;AACtC,QAAIH,IAAI,KAAKI,SAAb,EAAwB;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqBV,uBAArB,EAA8CM,IAA9C;AACAT,MAAAA,QAAQ,CAAC,wBAAD,CAAR;AACD,KAHD,MAGO;AACL,UAAIQ,eAAJ,EAAqB;AACnBA,QAAAA,eAAe;AAChB;AACF;AACF,GATD;;AAWA,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEE,yBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EACDH,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACO,MAAL,KAAgBH,SAAtC,IAAmDJ,IAAI,CAACO,MAAL,CAAYC,MAAZ,GAAqB,CAAxE,GACIR,IAAI,CAACO,MAAL,CAAY,CAAZ,EAAeE,GADnB,GAEIZ,gBAJR;AAME,IAAA,GAAG,EACDG,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACO,MAAL,KAAgBH,SAAtC,IAAmDJ,IAAI,CAACO,MAAL,CAAYC,MAAZ,GAAqB,CAAxE,GACIR,IAAI,CAACU,YAAL,GAAoB,OADxB,GAEI,oBATR;AAWE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAXT;AAYE,IAAA,SAAS,EAAC,qBAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeGZ,IAAI,KAAKI,SAAT,GAAqBJ,IAAI,CAACU,YAA1B,GAAyC,sBAf5C,CADF;AAmBD,CAnCD;;AAqCA,eAAeZ,wBAAf","sourcesContent":["import React from \"react\";\nimport { navigate, usePath } from \"hookrouter\";\nimport { Button } from \"react-bootstrap\";\nimport { localStorageRedirectKey } from \"../pages/SpotifyAuthorization\";\nimport SpotifyLogoRound from \"../img/spotify-logo-round.png\";\n\ninterface IProps {\n  user: SpotifyApi.CurrentUsersProfileResponse | undefined;\n  onLoggedInClick?: () => void;\n}\n\nconst SpotifyLoginStatusButton: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { user, onLoggedInClick } = props;\n\n  const path = usePath();\n\n  const loggedInStatusButtonClick = () => {\n    if (user === undefined) {\n      localStorage.setItem(localStorageRedirectKey, path);\n      navigate(\"/spotify-authorization\");\n    } else {\n      if (onLoggedInClick) {\n        onLoggedInClick();\n      }\n    }\n  };\n\n  return (\n    <Button variant=\"outline-secondary\" onClick={loggedInStatusButtonClick}>\n      <img\n        src={\n          user !== undefined && user.images !== undefined && user.images.length > 0\n            ? user.images[0].url\n            : SpotifyLogoRound\n        }\n        alt={\n          user !== undefined && user.images !== undefined && user.images.length > 0\n            ? user.display_name + \" Logo\"\n            : \"Spotify Logo Round\"\n        }\n        style={{ height: 20, width: 20 }}\n        className=\"mr-2 rounded-circle\"\n      />\n      {user !== undefined ? user.display_name : \"Sign In With Spotify\"}\n    </Button>\n  );\n};\n\nexport default SpotifyLoginStatusButton;\n"]},"metadata":{},"sourceType":"module"}