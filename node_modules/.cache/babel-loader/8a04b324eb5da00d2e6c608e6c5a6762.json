{"ast":null,"code":"// Modified Source: https://github.com/rehooks/window-size\nimport { useState, useEffect } from \"react\";\n\nfunction getSize() {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth\n  };\n}\n\nexport default function useWindowSize() {\n  let [windowSize, setWindowSize] = useState(getSize());\n\n  function handleResize() {\n    setWindowSize(getSize());\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return windowSize;\n}","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/hooks/WindowSize.ts"],"names":["useState","useEffect","getSize","innerHeight","window","innerWidth","outerHeight","outerWidth","useWindowSize","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"AAAA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AASA,SAASC,OAAT,GAAqC;AACnC,SAAO;AACLC,IAAAA,WAAW,EAAEC,MAAM,CAACD,WADf;AAELE,IAAAA,UAAU,EAAED,MAAM,CAACC,UAFd;AAGLC,IAAAA,WAAW,EAAEF,MAAM,CAACE,WAHf;AAILC,IAAAA,UAAU,EAAEH,MAAM,CAACG;AAJd,GAAP;AAMD;;AAED,eAAe,SAASC,aAAT,GAA2C;AACxD,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAmBE,OAAO,EAA1B,CAA1C;;AAEA,WAASS,YAAT,GAAwB;AACtBD,IAAAA,aAAa,CAACR,OAAO,EAAR,CAAb;AACD;;AAEDD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAOF,UAAP;AACD","sourcesContent":["// Modified Source: https://github.com/rehooks/window-size\n\nimport { useState, useEffect } from \"react\";\n\ninterface WindowDimensions {\n  innerHeight: number;\n  innerWidth: number;\n  outerHeight: number;\n  outerWidth: number;\n}\n\nfunction getSize(): WindowDimensions {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth\n  };\n}\n\nexport default function useWindowSize(): WindowDimensions {\n  let [windowSize, setWindowSize] = useState<WindowDimensions>(getSize());\n\n  function handleResize() {\n    setWindowSize(getSize());\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return windowSize;\n}\n"]},"metadata":{},"sourceType":"module"}