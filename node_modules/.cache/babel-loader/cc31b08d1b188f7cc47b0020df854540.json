{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/NamedDropdown.tsx\";\nimport React, { useState } from \"react\";\nimport { Dropdown, DropdownButton, InputGroup } from \"react-bootstrap\";\nimport { randomString } from \"../logic/Utils\";\n\nconst NamedDropdown = props => {\n  const {\n    available_values,\n    selected_value,\n    title,\n    onSelect,\n    className\n  } = props;\n  const [id] = useState(\"dropdown_\" + randomString(16));\n\n  const onComponentAudioFeatureSelect = audioFeature => () => onSelect(audioFeature);\n\n  return /*#__PURE__*/React.createElement(InputGroup, {\n    className: `mt-1 d-inline-flex w-auto ${className !== undefined ? className : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(DropdownButton, {\n    as: InputGroup.Append,\n    variant: \"outline-secondary\",\n    title: selected_value,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, available_values.map(audio_feature => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    key: audio_feature,\n    onClick: onComponentAudioFeatureSelect(audio_feature),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, audio_feature))));\n};\n\nexport default NamedDropdown;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/NamedDropdown.tsx"],"names":["React","useState","Dropdown","DropdownButton","InputGroup","randomString","NamedDropdown","props","available_values","selected_value","title","onSelect","className","id","onComponentAudioFeatureSelect","audioFeature","undefined","Append","map","audio_feature"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,UAAnC,QAAqD,iBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAUA,MAAMC,aAA8C,GAAIC,KAAD,IAAmB;AACxE,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA,KAApC;AAA2CC,IAAAA,QAA3C;AAAqDC,IAAAA;AAArD,MAAmEL,KAAzE;AAEA,QAAM,CAACM,EAAD,IAAOZ,QAAQ,CAAC,cAAcI,YAAY,CAAC,EAAD,CAA3B,CAArB;;AAEA,QAAMS,6BAA6B,GAAIC,YAAD,IAA0B,MAAMJ,QAAQ,CAACI,YAAD,CAA9E;;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAG,6BAA4BH,SAAS,KAAKI,SAAd,GAA0BJ,SAA1B,GAAsC,EAAG,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBF,KAAlB,CADF,CADF,eAIE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAEN,UAAU,CAACa,MADjB;AAEE,IAAA,OAAO,EAAC,mBAFV;AAGE,IAAA,KAAK,EAAER,cAHT;AAIE,IAAA,EAAE,EAAEI,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,gBAAgB,CAACU,GAAjB,CAAsBC,aAAD,iBACpB,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,GAAG,EAAEA,aAApB;AAAmC,IAAA,OAAO,EAAEL,6BAA6B,CAACK,aAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aADH,CADD,CANH,CAJF,CADF;AAmBD,CA1BD;;AA4BA,eAAeb,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Dropdown, DropdownButton, InputGroup } from \"react-bootstrap\";\nimport { randomString } from \"../logic/Utils\";\n\ninterface IProps {\n  available_values: string[];\n  selected_value: string;\n  title: string;\n  onSelect: (value: string) => void;\n  className?: string;\n}\n\nconst NamedDropdown: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { available_values, selected_value, title, onSelect, className } = props;\n\n  const [id] = useState(\"dropdown_\" + randomString(16));\n\n  const onComponentAudioFeatureSelect = (audioFeature: string) => () => onSelect(audioFeature);\n\n  return (\n    <InputGroup className={`mt-1 d-inline-flex w-auto ${className !== undefined ? className : \"\"}`}>\n      <InputGroup.Prepend>\n        <InputGroup.Text>{title}</InputGroup.Text>\n      </InputGroup.Prepend>\n      <DropdownButton\n        as={InputGroup.Append}\n        variant=\"outline-secondary\"\n        title={selected_value}\n        id={id}\n      >\n        {available_values.map((audio_feature) => (\n          <Dropdown.Item key={audio_feature} onClick={onComponentAudioFeatureSelect(audio_feature)}>\n            {audio_feature}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n    </InputGroup>\n  );\n};\n\nexport default NamedDropdown;\n"]},"metadata":{},"sourceType":"module"}