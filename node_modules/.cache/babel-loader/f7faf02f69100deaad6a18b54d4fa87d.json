{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/PlaylistDetails.tsx\";\nimport React from \"react\";\nimport { Badge, Spinner } from \"react-bootstrap\";\n\nconst PlaylistDetails = props => {\n  const {\n    playlists,\n    tracksLoading\n  } = props;\n\n  if (playlists.length === 1) {\n    const playlist = playlists[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, playlist.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: playlist.owner.external_urls.spotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, playlist.owner.display_name)), /*#__PURE__*/React.createElement(Badge, {\n      variant: \"dark\",\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"Songs: \", playlist.tracks.total), /*#__PURE__*/React.createElement(\"a\", {\n      href: playlist.external_urls.spotify,\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Spotify\")), /*#__PURE__*/React.createElement(Badge, {\n      variant: \"danger\",\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, playlist.public ? \"Public\" : \"Private\")), tracksLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, playlists.length, \" Playlist\", playlists.length > 1 && \"s\", \" Selected\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"dark\",\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Songs: \", playlists.map(p => p.tracks.total).reduce((a, b) => a + b))), tracksLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })));\n  }\n};\n\nexport default PlaylistDetails;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/PlaylistDetails.tsx"],"names":["React","Badge","Spinner","PlaylistDetails","props","playlists","tracksLoading","length","playlist","name","owner","external_urls","spotify","display_name","tracks","total","public","map","p","reduce","a","b"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Badge, Spinner } from \"react-bootstrap\";\nimport { PlaylistObjectSimplifiedWithTrackIds } from \"../models/Spotify\";\n\ninterface IProps {\n  playlists: PlaylistObjectSimplifiedWithTrackIds[];\n  tracksLoading: boolean;\n}\n\nconst PlaylistDetails: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { playlists, tracksLoading } = props;\n\n  if (playlists.length === 1) {\n    const playlist = playlists[0];\n    return (\n      <div>\n        <h3 className=\"mb-0\">{playlist.name}</h3>\n        <div>\n          <a href={playlist.owner.external_urls.spotify}>\n            <Badge variant=\"primary\">{playlist.owner.display_name}</Badge>\n          </a>\n          <Badge variant=\"dark\" className=\"ml-1\">\n            Songs: {playlist.tracks.total}\n          </Badge>\n          <a href={playlist.external_urls.spotify} className=\"ml-1\">\n            <Badge variant=\"success\">Spotify</Badge>\n          </a>\n          <Badge variant=\"danger\" className=\"ml-1\">\n            {playlist.public ? \"Public\" : \"Private\"}\n          </Badge>\n        </div>\n        {tracksLoading && (\n          <div className=\"text-center mt-3\">\n            <Spinner animation=\"border\" />\n          </div>\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h3 className=\"mb-0\">\n          {playlists.length} Playlist{playlists.length > 1 && \"s\"} Selected\n        </h3>\n        <div>\n          <Badge variant=\"dark\" className=\"ml-1\">\n            Songs: {playlists.map((p) => p.tracks.total).reduce((a, b) => a + b)}\n          </Badge>\n        </div>\n        {tracksLoading && (\n          <div className=\"text-center mt-3\">\n            <Spinner animation=\"border\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default PlaylistDetails;\n"]},"metadata":{},"sourceType":"module"}