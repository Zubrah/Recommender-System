{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/pages/Compare/index.tsx\";\nimport React, { useState } from \"react\";\nimport { Container, Spinner } from \"react-bootstrap\";\nimport PlaylistSelection from \"../../components/PlaylistSelection\";\nimport SpotifyLoginStatusButton from \"../../components/SpotifyLoginStatusButton\";\nimport NamedDropdown from \"../../components/NamedDropdown\";\nimport BoxPlotAudioFeatureComparison from \"./BoxPlotAudioFeatureComparison\";\nimport ScatterPlotDualAudioFeatureComparison from \"./ScatterPlotDualAudioFeatureComparison\";\nimport RadarChartAudioFeatureComparison from \"./RadarChartAudioFeatureComparison\";\nimport { availableTrackAudioFeatures } from \"../../models/Spotify\";\n\nconst Compare = props => {\n  const {\n    user,\n    playlists,\n    tracks,\n    playlistsLoading,\n    refreshPlaylist\n  } = props;\n  const [selectedPlaylistIds, setSelectedPlaylistIds] = useState([]);\n  const [oneDimensionComparisonAudioFeature, setOneDimensionComparisonAudioFeature] = useState(\"Valence\");\n  const [twoDimensionComparisonAudioFeatureX, setTwoDimensionComparisonAudioFeatureX] = useState(\"Valence\");\n  const [twoDimensionComparisonAudioFeatureY, setTwoDimensionComparisonAudioFeatureY] = useState(\"Energy\");\n\n  const onPlaylistSelectionChange = playlist_ids => {\n    setSelectedPlaylistIds(playlist_ids);\n    playlist_ids.forEach(playlist_id => {\n      if (playlists[playlist_id].track_ids.length === 0) {\n        refreshPlaylist(playlists[playlist_id]);\n      }\n    });\n  };\n\n  const selectedPlaylists = selectedPlaylistIds.map(pid => playlists[pid]);\n  const header = /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-3 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Compare Playlists\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center lead col-md-7 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Select playlists and compare them on one audio feature, two audio features or seven pre-selected audio features.\"));\n\n  if (user === undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, header, /*#__PURE__*/React.createElement(Container, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Sign into Spotify\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"To get access to your playlists and the ability to create playlists, you need to sign into Spotify.\"), /*#__PURE__*/React.createElement(SpotifyLoginStatusButton, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, header, /*#__PURE__*/React.createElement(Container, {\n    className: \"text-center mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Select a Playlist\"), /*#__PURE__*/React.createElement(PlaylistSelection, {\n    playlists: Object.values(playlists),\n    selectedPlaylistIds: selectedPlaylistIds,\n    selectionsAllowed: \"Multiple\",\n    onPlaylistSelectionChange: onPlaylistSelectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), playlistsLoading.size > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), selectedPlaylistIds.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Single Audio Feature Comparison\"), /*#__PURE__*/React.createElement(NamedDropdown, {\n    available_values: Object.keys(availableTrackAudioFeatures),\n    selected_value: oneDimensionComparisonAudioFeature,\n    title: \"Audio Feature\",\n    onSelect: setOneDimensionComparisonAudioFeature,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BoxPlotAudioFeatureComparison, {\n    selectedPlaylists: selectedPlaylists,\n    tracks: tracks,\n    audioFeature: availableTrackAudioFeatures[oneDimensionComparisonAudioFeature].key,\n    min: availableTrackAudioFeatures[oneDimensionComparisonAudioFeature].min,\n    max: availableTrackAudioFeatures[oneDimensionComparisonAudioFeature].max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Dual Audio Feature Comparison\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NamedDropdown, {\n    available_values: Object.keys(availableTrackAudioFeatures),\n    selected_value: twoDimensionComparisonAudioFeatureX,\n    title: \"X-Axis ( \\u2194 )\",\n    onSelect: setTwoDimensionComparisonAudioFeatureX,\n    className: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NamedDropdown, {\n    available_values: Object.keys(availableTrackAudioFeatures),\n    selected_value: twoDimensionComparisonAudioFeatureY,\n    title: \"Y-Axis ( \\u2195 )\",\n    onSelect: setTwoDimensionComparisonAudioFeatureY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ScatterPlotDualAudioFeatureComparison, {\n    playlists: selectedPlaylists,\n    tracks: tracks,\n    x_audio_feature_name: twoDimensionComparisonAudioFeatureX,\n    y_audio_feature_name: twoDimensionComparisonAudioFeatureY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"0-1 Range Audio Feature Comparison\"), /*#__PURE__*/React.createElement(RadarChartAudioFeatureComparison, {\n    playlists: selectedPlaylists,\n    tracks: tracks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Compare;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/pages/Compare/index.tsx"],"names":["React","useState","Container","Spinner","PlaylistSelection","SpotifyLoginStatusButton","NamedDropdown","BoxPlotAudioFeatureComparison","ScatterPlotDualAudioFeatureComparison","RadarChartAudioFeatureComparison","availableTrackAudioFeatures","Compare","props","user","playlists","tracks","playlistsLoading","refreshPlaylist","selectedPlaylistIds","setSelectedPlaylistIds","oneDimensionComparisonAudioFeature","setOneDimensionComparisonAudioFeature","twoDimensionComparisonAudioFeatureX","setTwoDimensionComparisonAudioFeatureX","twoDimensionComparisonAudioFeatureY","setTwoDimensionComparisonAudioFeatureY","onPlaylistSelectionChange","playlist_ids","forEach","playlist_id","track_ids","length","selectedPlaylists","map","pid","header","undefined","Object","values","size","keys","key","min","max"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Spinner } from \"react-bootstrap\";\nimport PlaylistSelection from \"../../components/PlaylistSelection\";\nimport SpotifyLoginStatusButton from \"../../components/SpotifyLoginStatusButton\";\nimport NamedDropdown from \"../../components/NamedDropdown\";\nimport BoxPlotAudioFeatureComparison from \"./BoxPlotAudioFeatureComparison\";\nimport ScatterPlotDualAudioFeatureComparison from \"./ScatterPlotDualAudioFeatureComparison\";\nimport RadarChartAudioFeatureComparison from \"./RadarChartAudioFeatureComparison\";\nimport {\n  PlaylistObjectSimplifiedWithTrackIds,\n  availableTrackAudioFeatures,\n  TrackWithAudioFeatures\n} from \"../../models/Spotify\";\n\ninterface IProps {\n  user: SpotifyApi.UserObjectPrivate | undefined;\n  playlists: { [key: string]: PlaylistObjectSimplifiedWithTrackIds };\n  tracks: { [key: string]: TrackWithAudioFeatures };\n  playlistsLoading: Set<string>;\n  refreshPlaylist: (playlist: SpotifyApi.PlaylistObjectSimplified) => void;\n}\n\nconst Compare: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { user, playlists, tracks, playlistsLoading, refreshPlaylist } = props;\n\n  const [selectedPlaylistIds, setSelectedPlaylistIds] = useState<string[]>([]);\n  const [oneDimensionComparisonAudioFeature, setOneDimensionComparisonAudioFeature] = useState(\n    \"Valence\"\n  );\n  const [twoDimensionComparisonAudioFeatureX, setTwoDimensionComparisonAudioFeatureX] = useState(\n    \"Valence\"\n  );\n  const [twoDimensionComparisonAudioFeatureY, setTwoDimensionComparisonAudioFeatureY] = useState(\n    \"Energy\"\n  );\n\n  const onPlaylistSelectionChange = (playlist_ids: string[]) => {\n    setSelectedPlaylistIds(playlist_ids);\n    playlist_ids.forEach((playlist_id) => {\n      if (playlists[playlist_id].track_ids.length === 0) {\n        refreshPlaylist(playlists[playlist_id]);\n      }\n    });\n  };\n\n  const selectedPlaylists = selectedPlaylistIds.map((pid) => playlists[pid]);\n\n  const header = (\n    <Container className=\"mt-3 mb-4\">\n      <h1 className=\"text-center\">Compare Playlists</h1>\n      <p className=\"text-center lead col-md-7 mx-auto\">\n        Select playlists and compare them on one audio feature, two audio features or seven\n        pre-selected audio features.\n      </p>\n    </Container>\n  );\n\n  if (user === undefined) {\n    return (\n      <>\n        {header}\n        <Container className=\"text-center\">\n          <h2>Sign into Spotify</h2>\n          <p>\n            To get access to your playlists and the ability to create playlists, you need to sign\n            into Spotify.\n          </p>\n          <SpotifyLoginStatusButton user={user} />\n        </Container>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {header}\n\n      <Container className=\"text-center mb-5\">\n        <h3 className=\"mb-3\">Select a Playlist</h3>\n        <PlaylistSelection\n          playlists={Object.values(playlists)}\n          selectedPlaylistIds={selectedPlaylistIds}\n          selectionsAllowed=\"Multiple\"\n          onPlaylistSelectionChange={onPlaylistSelectionChange}\n        />\n\n        {playlistsLoading.size > 0 && (\n          <div className=\"my-4\">\n            <Spinner animation=\"border\" />\n          </div>\n        )}\n\n        {selectedPlaylistIds.length > 0 && (\n          <>\n            <hr />\n\n            <div className=\"mb-5\">\n              <h4 className=\"mb-3\">Single Audio Feature Comparison</h4>\n\n              <NamedDropdown\n                available_values={Object.keys(availableTrackAudioFeatures)}\n                selected_value={oneDimensionComparisonAudioFeature}\n                title=\"Audio Feature\"\n                onSelect={setOneDimensionComparisonAudioFeature}\n                className=\"mb-3\"\n              />\n\n              <BoxPlotAudioFeatureComparison\n                selectedPlaylists={selectedPlaylists}\n                tracks={tracks}\n                audioFeature={availableTrackAudioFeatures[oneDimensionComparisonAudioFeature].key}\n                min={availableTrackAudioFeatures[oneDimensionComparisonAudioFeature].min}\n                max={availableTrackAudioFeatures[oneDimensionComparisonAudioFeature].max}\n              />\n            </div>\n\n            <div className=\"mb-5\">\n              <h4 className=\"mb-3\">Dual Audio Feature Comparison</h4>\n\n              <div className=\"mb-3\">\n                <NamedDropdown\n                  available_values={Object.keys(availableTrackAudioFeatures)}\n                  selected_value={twoDimensionComparisonAudioFeatureX}\n                  title=\"X-Axis ( ↔ )\"\n                  onSelect={setTwoDimensionComparisonAudioFeatureX}\n                  className=\"mr-3\"\n                />\n\n                <NamedDropdown\n                  available_values={Object.keys(availableTrackAudioFeatures)}\n                  selected_value={twoDimensionComparisonAudioFeatureY}\n                  title=\"Y-Axis ( ↕ )\"\n                  onSelect={setTwoDimensionComparisonAudioFeatureY}\n                />\n              </div>\n\n              <ScatterPlotDualAudioFeatureComparison\n                playlists={selectedPlaylists}\n                tracks={tracks}\n                x_audio_feature_name={twoDimensionComparisonAudioFeatureX}\n                y_audio_feature_name={twoDimensionComparisonAudioFeatureY}\n              />\n            </div>\n\n            <div className=\"mb-5\">\n              <h4 className=\"mb-3\">0-1 Range Audio Feature Comparison</h4>\n\n              <RadarChartAudioFeatureComparison playlists={selectedPlaylists} tracks={tracks} />\n            </div>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Compare;\n"]},"metadata":{},"sourceType":"module"}