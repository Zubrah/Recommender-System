{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/StoredDataDialog.tsx\";\nimport React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst StoredDataDialog = props => {\n  const {\n    token,\n    user,\n    playlists,\n    tracks\n  } = props;\n  const {\n    onClose,\n    onLogOut\n  } = props;\n  const tokenStub = token.value.substr(0, 10) + \".....\" + token.value.substr(token.value.length - 10, token.value.length);\n  const publicPlaylistCount = Object.values(playlists).filter(p => p.public).length;\n  const privatePlaylistCount = Object.values(playlists).filter(p => !p.public).length;\n  const tracksStored = Object.values(tracks).length;\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: true,\n    onHide: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, user.display_name)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Data currently stored:\", /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    title: tokenStub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Token expires at: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }\n  }, token.expiry.toLocaleTimeString())), /*#__PURE__*/React.createElement(\"li\", {\n    title: user.uri,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"User associated: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }\n  }, user.display_name)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Playlists stored:\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, publicPlaylistCount, \" public and \", privatePlaylistCount, \" private\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Tracks stored (with audio features): \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 50\n    }\n  }, tracksStored)))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: onLogOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Logout\")));\n};\n\nexport default StoredDataDialog;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/components/StoredDataDialog.tsx"],"names":["React","Button","Modal","StoredDataDialog","props","token","user","playlists","tracks","onClose","onLogOut","tokenStub","value","substr","length","publicPlaylistCount","Object","values","filter","p","public","privatePlaylistCount","tracksStored","display_name","expiry","toLocaleTimeString","uri"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;;AAgBA,MAAMC,gBAAiD,GAAIC,KAAD,IAAmB;AAC3E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAqCJ,KAA3C;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBN,KAA9B;AAEA,QAAMO,SAAS,GACbN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsB,EAAtB,IACA,OADA,GAEAR,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBR,KAAK,CAACO,KAAN,CAAYE,MAAZ,GAAqB,EAAxC,EAA4CT,KAAK,CAACO,KAAN,CAAYE,MAAxD,CAHF;AAIA,QAAMC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAcV,SAAd,EAAyBW,MAAzB,CAAiCC,CAAD,IAAOA,CAAC,CAACC,MAAzC,EAAiDN,MAA7E;AACA,QAAMO,oBAAoB,GAAGL,MAAM,CAACC,MAAP,CAAcV,SAAd,EAAyBW,MAAzB,CAAiCC,CAAD,IAAO,CAACA,CAAC,CAACC,MAA1C,EAAkDN,MAA/E;AACA,QAAMQ,YAAY,GAAGN,MAAM,CAACC,MAAP,CAAcT,MAAd,EAAsBM,MAA3C;AAEA,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,IAAb;AAAmB,IAAA,MAAM,EAAEL,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcH,IAAI,CAACiB,YAAnB,CADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAEZ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAK,CAACmB,MAAN,CAAaC,kBAAb,EAAP,CADpB,CADF,eAIE;AAAI,IAAA,KAAK,EAAEnB,IAAI,CAACoB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpB,IAAI,CAACiB,YAAZ,CADnB,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoB,GADpB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,mBADH,kBACoCM,oBADpC,aAFF,CAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,YAAP,CADvC,CAbF,CAFF,CAJF,eAwBE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEZ,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAxBF,CADF;AAgCD,CA5CD;;AA8CA,eAAeP,gBAAf","sourcesContent":["import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n  Token,\n  PlaylistObjectSimplifiedWithTrackIds,\n  TrackWithAudioFeatures\n} from \"../models/Spotify\";\n\ninterface IProps {\n  token: Token;\n  user: SpotifyApi.UserObjectPrivate;\n  playlists: { [key: string]: PlaylistObjectSimplifiedWithTrackIds };\n  tracks: { [key: string]: TrackWithAudioFeatures };\n  onClose: () => void;\n  onLogOut: () => void;\n}\n\nconst StoredDataDialog: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { token, user, playlists, tracks } = props;\n  const { onClose, onLogOut } = props;\n\n  const tokenStub =\n    token.value.substr(0, 10) +\n    \".....\" +\n    token.value.substr(token.value.length - 10, token.value.length);\n  const publicPlaylistCount = Object.values(playlists).filter((p) => p.public).length;\n  const privatePlaylistCount = Object.values(playlists).filter((p) => !p.public).length;\n  const tracksStored = Object.values(tracks).length;\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{user.display_name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        Data currently stored:\n        <ul className=\"mb-0\">\n          <li title={tokenStub}>\n            Token expires at: <code>{token.expiry.toLocaleTimeString()}</code>\n          </li>\n          <li title={user.uri}>\n            User associated: <code>{user.display_name}</code>\n          </li>\n          <li>\n            Playlists stored:{\" \"}\n            <code>\n              {publicPlaylistCount} public and {privatePlaylistCount} private\n            </code>\n          </li>\n          <li>\n            Tracks stored (with audio features): <code>{tracksStored}</code>\n          </li>\n        </ul>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={onLogOut}>\n          Logout\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default StoredDataDialog;\n"]},"metadata":{},"sourceType":"module"}