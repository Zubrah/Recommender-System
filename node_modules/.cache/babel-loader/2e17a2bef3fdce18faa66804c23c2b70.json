{"ast":null,"code":"var _jsxFileName = \"/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/pages/Tools/FilterAudioFeaturePredicate.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Dropdown, DropdownButton, FormControl } from \"react-bootstrap\";\nimport { availableTrackAudioFeatures } from \"../../models/Spotify\";\nconst operators = {\n  \"==\": (track_value, user_value) => track_value === user_value,\n  \">\": (track_value, user_value) => track_value > user_value,\n  \"<\": (track_value, user_value) => track_value < user_value,\n  \">=\": (track_value, user_value) => track_value >= user_value,\n  \"<=\": (track_value, user_value) => track_value <= user_value\n};\n\nconst xor = (a, b) => a && !b || !a && b;\n\nconst FilterAudioFeaturePredicate = props => {\n  const {\n    outputCallback\n  } = props;\n  const [include, setInclude] = useState(true);\n  const [feature, setFeature] = useState(\"Energy\");\n  const [operator, setOperator] = useState(\">\");\n  const [value, setValue] = useState(\"0.5\");\n  useEffect(() => {\n    const value_as_number = parseFloat(value);\n\n    if (isNaN(value_as_number)) {\n      outputCallback(undefined, \"Please specify a number to filter on\");\n    } else {\n      const audio_feature_key = availableTrackAudioFeatures[feature].key;\n      outputCallback(tracks => tracks.filter(track => xor(track.audio_features !== undefined && track.audio_features !== null && operators[operator](track.audio_features[audio_feature_key], value_as_number), !include)), `${include ? \"Include\" : \"Exclude\"} songs where ${feature} ${operator} ${value}`);\n    }\n  }, [include, feature, operator, value]);\n\n  const setIncludeFromDropdown = includeValue => () => setInclude(includeValue);\n\n  const setFeatureFromDropdown = featureValue => () => setFeature(featureValue);\n\n  const setOperatorFromDropdown = operatorValue => () => setOperator(operatorValue);\n\n  const setvalueFromDropdown = event => setValue(event.currentTarget.value === undefined ? \"\" : event.currentTarget.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-flex w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    id: \"dropdown-include\",\n    title: include ? \"Include\" : \"Exclude\",\n    className: \"my-1 d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: setIncludeFromDropdown(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Include\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: setIncludeFromDropdown(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Exclude\")), /*#__PURE__*/React.createElement(DropdownButton, {\n    id: \"dropdown-feature\",\n    title: feature,\n    className: \"ml-1 my-1 d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, Object.keys(availableTrackAudioFeatures).map(af => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    key: af,\n    onClick: setFeatureFromDropdown(af),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, af))), /*#__PURE__*/React.createElement(DropdownButton, {\n    id: \"dropdown-operator\",\n    title: operator,\n    className: \"ml-1 my-1 d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, Object.keys(operators).map(op => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    key: op,\n    onClick: setOperatorFromDropdown(op),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, op))), /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Value\",\n    \"aria-label\": \"Value\",\n    type: \"number\",\n    value: value === undefined ? \"\" : value + \"\",\n    onChange: setvalueFromDropdown,\n    className: \"ml-1 my-1 d-inline\",\n    style: {\n      maxWidth: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FilterAudioFeaturePredicate;","map":{"version":3,"sources":["/Users/zubrah_/Desktop/New folder/Hello world/emotionify/src/pages/Tools/FilterAudioFeaturePredicate.tsx"],"names":["React","useEffect","useState","Dropdown","DropdownButton","FormControl","availableTrackAudioFeatures","operators","track_value","user_value","xor","a","b","FilterAudioFeaturePredicate","props","outputCallback","include","setInclude","feature","setFeature","operator","setOperator","value","setValue","value_as_number","parseFloat","isNaN","undefined","audio_feature_key","key","tracks","filter","track","audio_features","setIncludeFromDropdown","includeValue","setFeatureFromDropdown","featureValue","setOperatorFromDropdown","operatorValue","setvalueFromDropdown","event","currentTarget","Object","keys","map","af","op","maxWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Dropdown, DropdownButton, FormControl } from \"react-bootstrap\";\nimport { FormControlProps } from \"react-bootstrap/FormControl\";\nimport { ReplaceProps, BsPrefixProps } from \"react-bootstrap/helpers\";\nimport { FilterFunctionProps } from \"./filter\";\nimport { TrackWithAudioFeatures, availableTrackAudioFeatures } from \"../../models/Spotify\";\n\ninterface IProps extends FilterFunctionProps {}\n\nconst operators: { [key: string]: (track_value: number, user_value: number) => boolean } = {\n  \"==\": (track_value, user_value) => track_value === user_value,\n  \">\": (track_value, user_value) => track_value > user_value,\n  \"<\": (track_value, user_value) => track_value < user_value,\n  \">=\": (track_value, user_value) => track_value >= user_value,\n  \"<=\": (track_value, user_value) => track_value <= user_value\n};\nconst xor = (a: boolean, b: boolean): boolean => (a && !b) || (!a && b);\n\nconst FilterAudioFeaturePredicate: React.FunctionComponent<IProps> = (props: IProps) => {\n  const { outputCallback } = props;\n\n  const [include, setInclude] = useState(true);\n  const [feature, setFeature] = useState(\"Energy\");\n  const [operator, setOperator] = useState(\">\");\n  const [value, setValue] = useState<string>(\"0.5\");\n\n  useEffect(() => {\n    const value_as_number = parseFloat(value);\n    if (isNaN(value_as_number)) {\n      outputCallback(undefined, \"Please specify a number to filter on\");\n    } else {\n      const audio_feature_key: keyof SpotifyApi.AudioFeaturesObject =\n        availableTrackAudioFeatures[feature].key;\n      outputCallback(\n        (tracks: TrackWithAudioFeatures[]): TrackWithAudioFeatures[] =>\n          tracks.filter((track) =>\n            xor(\n              track.audio_features !== undefined &&\n                track.audio_features !== null &&\n                operators[operator](\n                  track.audio_features[audio_feature_key] as number,\n                  value_as_number\n                ),\n              !include\n            )\n          ),\n        `${include ? \"Include\" : \"Exclude\"} songs where ${feature} ${operator} ${value}`\n      );\n    }\n  }, [include, feature, operator, value]);\n\n  const setIncludeFromDropdown = (includeValue: boolean) => () => setInclude(includeValue);\n  const setFeatureFromDropdown = (featureValue: string) => () => setFeature(featureValue);\n  const setOperatorFromDropdown = (operatorValue: string) => () => setOperator(operatorValue);\n  const setvalueFromDropdown = (\n    event: React.FormEvent<ReplaceProps<\"input\", BsPrefixProps<\"input\"> & FormControlProps>>\n  ) => setValue(event.currentTarget.value === undefined ? \"\" : event.currentTarget.value);\n\n  return (\n    <div className=\"d-inline-flex w-100\">\n      <DropdownButton\n        id=\"dropdown-include\"\n        title={include ? \"Include\" : \"Exclude\"}\n        className=\"my-1 d-inline\"\n      >\n        <Dropdown.Item onClick={setIncludeFromDropdown(true)}>Include</Dropdown.Item>\n        <Dropdown.Item onClick={setIncludeFromDropdown(false)}>Exclude</Dropdown.Item>\n      </DropdownButton>\n\n      <DropdownButton id=\"dropdown-feature\" title={feature} className=\"ml-1 my-1 d-inline\">\n        {Object.keys(availableTrackAudioFeatures).map((af) => (\n          <Dropdown.Item key={af} onClick={setFeatureFromDropdown(af)}>\n            {af}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n\n      <DropdownButton id=\"dropdown-operator\" title={operator} className=\"ml-1 my-1 d-inline\">\n        {Object.keys(operators).map((op) => (\n          <Dropdown.Item key={op} onClick={setOperatorFromDropdown(op)}>\n            {op}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n\n      <FormControl\n        placeholder=\"Value\"\n        aria-label=\"Value\"\n        type=\"number\"\n        value={value === undefined ? \"\" : value + \"\"}\n        onChange={setvalueFromDropdown}\n        className=\"ml-1 my-1 d-inline\"\n        style={{ maxWidth: 400 }}\n      />\n    </div>\n  );\n};\n\nexport default FilterAudioFeaturePredicate;\n"]},"metadata":{},"sourceType":"module"}